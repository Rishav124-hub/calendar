[{"C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\index.js":"1","C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\reportWebVitals.js":"2","C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\App.js":"3","C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\UpcomingHolidays.js":"4","C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\PassedHolidays.js":"5"},{"size":499,"mtime":1624785842626,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":3219,"mtime":1624810468935,"results":"9","hashOfConfig":"7"},{"size":5382,"mtime":1624808536404,"results":"10","hashOfConfig":"7"},{"size":5201,"mtime":1624808330355,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1oz8hi7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\index.js",[],["26","27"],"C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\reportWebVitals.js",[],"C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\App.js",["28"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport PassedHolidays from \"./PassedHolidays\";\nimport UpcomingHolidays from \"./UpcomingHolidays\";\nclass App extends Component{\n\n  state={\n    tabtype: 'Upcoming',\n    loading :true,\n    Data: null,\n    on:false,\n    Message:\"No Holiday Today\",\n    // current date time\n    currentDateTime:new Date().toLocaleDateString(),\n    currentDay:new Date().toLocaleDateString().split('/')[1],\n    currentMonth:new Date().toLocaleDateString().split('/')[0],\n    currentYear:new Date().toLocaleDateString().split('/')[2],\n  };\n  //   api call\n  async componentDidMount(){\n    const url =\"https://calendarific.com/api/v2/holidays?country=IN&year=2021&api_key=633e1b568bf333902e4da88af99852664097bfdb\";\n    const response = await fetch(url);\n    const data = await response.json();\n    if(this.state.currentMonth<10){\n      this.setState({\n          Data: data.response.holidays,\n          loading: false,\n          currentDateTime:this.state.currentYear + '-' + '0' + this.state.currentMonth + '-' + this.state.currentDay\n          });\n      }else{\n          this.setState({\n              Data: data.response.holidays,\n              loading: false,\n              currentDateTime:this.state.currentYear + '-' +this.state.currentMonth + '-' + this.state.currentDay\n              });\n      }\n      var passedData=[]\n      var j=0\n      for(var i=0; i<this.state.Data.length;i++){\n          if(this.state.Data[i].date.iso===this.state.currentDateTime){\n              passedData[j]=this.state.Data[i]\n              j++\n              console.log(\"Data\",passedData)\n              this.setState({\n                Message: \"Hey,you got Holiday today.\"\n              })    \n          }    \n      }\n      this.setState({\n          Data: passedData,\n      })\n  }\n  \n  toggleMe=(value)=>{\n    this.setState({\n        tabtype:value,   \n    })\n  };\n  render(){\n    const month =[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];    \n    return(\n      <div className=\"main-container\">\n        \n          {\n            (this.state.Message===\"No Holiday Today\")?(\n              <div>{this.state.Message}</div>\n            ):(\n              <div>\n                <p>{this.state.Message}</p>\n                <p>{this.state.currentDay} {month[this.state.currentMonth-1]} {this.state.currentYear}</p>\n                {\n                  this.state.Data.map((item)=>\n                    <div>\n                      <div>{item.name}</div>\n                      <div>{item.type}</div>\n                    </div>\n                  )\n                }\n              </div>\n            )\n          }\n        \n        <div className=\"btns\">\n          <button className=\"btn\" onClick={()=>this.toggleMe('Upcoming')}>Upcoming Holidays</button>\n          <button className=\"btn\" onClick={()=>this.toggleMe('Passed')}>Passed Holidays</button>\n        </div>\n        <div className=\"data-container\">\n          {\n            this.state.tabtype==='Upcoming' && <UpcomingHolidays/>\n          }\n          {\n            this.state.tabtype==='Passed' && <PassedHolidays/>\n          }\n\n        </div>\n  \n      </div>\n    )\n  }\n}\nexport default App;","C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\UpcomingHolidays.js",["29"],"import React, { Component } from \"react\";\r\nimport './PassedHolidays.css';\r\n\r\nclass UpcomingHolidays extends Component{\r\n\r\n    state={\r\n        loading :true,\r\n        Data: null,\r\n        on:false,\r\n        // current date time\r\n        currentDateTime:new Date().toLocaleDateString(),\r\n        currentDay:new Date().toLocaleDateString().split('/')[1],\r\n        currentMonth:new Date().toLocaleDateString().split('/')[0],\r\n        currentYear:new Date().toLocaleDateString().split('/')[2],\r\n      };\r\n    //   api call\r\n    async componentDidMount(){\r\n      const url =\"https://calendarific.com/api/v2/holidays?country=IN&year=2021&api_key=633e1b568bf333902e4da88af99852664097bfdb\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if(this.state.currentMonth<10){\r\n        this.setState({\r\n            Data: data.response.holidays,\r\n            loading: false,\r\n            currentDateTime:this.state.currentYear + '-' + '0' +this.state.currentMonth + '-' + this.state.currentDay\r\n            });\r\n        }else{\r\n            this.setState({\r\n                Data: data.response.holidays,\r\n                loading: false,\r\n                currentDateTime:this.state.currentYear + '-' +this.state.currentMonth + '-' + this.state.currentDay\r\n                });\r\n        }\r\n        var upcommingData=[]\r\n        var j=0\r\n        for(var i=0; i<this.state.Data.length;i++){\r\n            if(this.state.Data[i].date.iso>this.state.currentDateTime){\r\n                upcommingData[j]=this.state.Data[i]\r\n                j++\r\n                console.log(\"Data\",upcommingData)\r\n            }    \r\n        }\r\n        this.setState({\r\n            Data: upcommingData,\r\n        })\r\n        console.log(\"hello\",this.state.Data)\r\n    }\r\n\r\n    clickme=(value)=>{\r\n        // creating a model and and adding content in the model\r\n        document.getElementById(\"content\").style.display=\"block\";\r\n        const month=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n        document.getElementById(\"content\").innerHTML='<div id=\"innercontainer\" style={style}><p id=\"date\">'+this.state.Data[value].date.datetime.day+' '+\r\n        month[this.state.Data[value].date.datetime.month-1]+' ' + this.state.Data[value].date.datetime.year+'</p>'+\r\n        '<p id=\"name\">'+this.state.Data[value].name+'</p><div id=\"type\">'+this.state.Data[value].type+'</div>'+\r\n        '<p id=\"description\">'+this.state.Data[value].description+'</p>'+\r\n        '<button id=\"closeBtn\">Close</button></div>';\r\n        // Styling the inner container of model \r\n        var innerStyle=document.getElementById(\"innercontainer\")\r\n        innerStyle.style.backgroundColor=\"white\";\r\n        innerStyle.style.padding=\"40px 10px\";\r\n        innerStyle.style.width=\"80%\";\r\n        innerStyle.style.height=\"65%\";\r\n        innerStyle.style.margin=\"5% 10%\";\r\n        // Styling the content(Date) of model\r\n        var date=document.getElementById(\"date\");\r\n        date.style.fontSize=\"-webkit-xxx-large\";\r\n        date.style.fontWeight=\"900\";\r\n        date.style.margin=\"30px\";\r\n        // Styling the content(Name of Holiday) of model\r\n        var name=document.getElementById(\"name\");\r\n        name.style.fontSize=\"xx-large\";\r\n        name.style.fontWeight=\"600\";\r\n        name.style.margin=\"5px\"\r\n        // Styling the content(type of holiday) of model\r\n        var type=document.getElementById(\"type\");\r\n        type.style.backgroundColor=\"darkviolet\";\r\n        type.style.padding=\"10px\";\r\n        type.style.width=\"20%\";\r\n        type.style.borderRadius=\"30px\";\r\n        type.style.margin=\"15px 40%\";\r\n        // Styling the content(Date) of model\r\n        var description=document.getElementById(\"description\");\r\n        description.style.margin=\"8% 50px\";\r\n        // Styling the content(type of holiday) of model\r\n        var button=document.getElementById(\"closeBtn\");\r\n        button.style.backgroundColor=\"limegreen\";\r\n        button.style.padding=\"5px\";\r\n        button.style.width=\"10%\";\r\n        button.style.color=\"white\";\r\n        // function of close button in the model\r\n        var Cmod=document.getElementById('closeBtn');\r\n        Cmod.onclick=function () {\r\n            document.getElementById(\"content\").style.display=\"none\";\r\n        }    \r\n    }\r\n    \r\n    render(){\r\n        const month =[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n        return(\r\n            <div>\r\n                {this.state.loading || !this.state.Data ?(\r\n                    <div>Loading......</div>\r\n                ):(\r\n                    <div className= \" main-container-btn\">\r\n                        \r\n                        {this.state.Data.map((item ,i )=>\r\n                                <button id=\"content-btn\" key={i} onClick={()=>this.clickme(i)}>\r\n                                    {item.date.datetime.day}<br/>\r\n                                    {month[item.date.datetime.month-1]}\r\n                                </button>   \r\n                        )}\r\n                        <div id=\"content\" >\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n                    \r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpcomingHolidays;","C:\\Users\\Rishav Jaiswal\\Git\\calendar\\src\\PassedHolidays.js",["30"],"import React, { Component } from \"react\";\r\nimport  \"./PassedHolidays.css\";\r\n\r\nclass PassedHolidays extends Component{\r\n\r\n    state={\r\n        loading :true,\r\n        Data: null,\r\n        on:false,\r\n        // current date time\r\n        currentDateTime:new Date().toLocaleDateString(),\r\n        currentDay:new Date().toLocaleDateString().split('/')[1],\r\n        currentMonth:new Date().toLocaleDateString().split('/')[0],\r\n        currentYear:new Date().toLocaleDateString().split('/')[2],\r\n      };\r\n    //   api call\r\n    async componentDidMount(){\r\n      const url =\"https://calendarific.com/api/v2/holidays?country=IN&year=2021&api_key=633e1b568bf333902e4da88af99852664097bfdb\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if(this.state.currentMonth<10){\r\n        this.setState({\r\n            Data: data.response.holidays,\r\n            loading: false,\r\n            currentDateTime:this.state.currentYear + '-' + '0' + this.state.currentMonth + '-' + this.state.currentDay\r\n            });\r\n        }else{\r\n            this.setState({\r\n                Data: data.response.holidays,\r\n                loading: false,\r\n                currentDateTime:this.state.currentYear + '-' +this.state.currentMonth + '-' + this.state.currentDay\r\n                });\r\n        }\r\n        var passedData=[];\r\n        var j=0\r\n        for(var i=0; i<this.state.Data.length;i++){\r\n            if(this.state.Data[i].date.iso<this.state.currentDateTime){\r\n                passedData[j]=this.state.Data[i]\r\n                j++\r\n                console.log(\"Data\",passedData)\r\n            }    \r\n        }\r\n        this.setState({\r\n            Data: passedData,\r\n        })\r\n    }\r\n    \r\n    clickme=(value)=>{\r\n        // creating a model and and adding content in the model\r\n        document.getElementById(\"content\").style.display=\"block\";\r\n        const month=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n        document.getElementById(\"content\").innerHTML='<div id=\"innercontainer\" style={style}><p id=\"date\">'+this.state.Data[value].date.datetime.day+' '+\r\n        month[this.state.Data[value].date.datetime.month-1]+' ' + this.state.Data[value].date.datetime.year+'</p>'+\r\n        '<p id=\"name\">'+this.state.Data[value].name+'</p><div id=\"type\">'+this.state.Data[value].type+'</div>'+\r\n        '<p id=\"description\">'+this.state.Data[value].description+'</p>'+\r\n        '<button id=\"closeBtn\">Close</button></div>';\r\n        // Styling the inner container of model \r\n        var innerStyle=document.getElementById(\"innercontainer\")\r\n        innerStyle.style.backgroundColor=\"white\";\r\n        innerStyle.style.padding=\"40px 10px\";\r\n        innerStyle.style.width=\"80%\";\r\n        innerStyle.style.height=\"65%\";\r\n        innerStyle.style.margin=\"5% 10%\";\r\n        // Styling the content(Date) of model\r\n        var date=document.getElementById(\"date\");\r\n        date.style.fontSize=\"-webkit-xxx-large\";\r\n        date.style.fontWeight=\"900\";\r\n        date.style.margin=\"30px\";\r\n        // Styling the content(Name of Holiday) of model\r\n        var name=document.getElementById(\"name\");\r\n        name.style.fontSize=\"xx-large\";\r\n        name.style.fontWeight=\"600\";\r\n        name.style.margin=\"5px\"\r\n        // Styling the content(type of holiday) of model\r\n        var type=document.getElementById(\"type\");\r\n        type.style.backgroundColor=\"darkviolet\";\r\n        type.style.padding=\"10px\";\r\n        type.style.width=\"20%\";\r\n        type.style.borderRadius=\"30px\";\r\n        type.style.margin=\"15px 40%\";\r\n        // Styling the content(Date) of model\r\n        var description=document.getElementById(\"description\");\r\n        description.style.margin=\"8% 50px\";\r\n        // Styling the content(type of holiday) of model\r\n        var button=document.getElementById(\"closeBtn\");\r\n        button.style.backgroundColor=\"limegreen\";\r\n        button.style.padding=\"5px\";\r\n        button.style.width=\"10%\";\r\n        button.style.color=\"white\";\r\n        // function of close button in the model\r\n        var Cmod=document.getElementById('closeBtn');\r\n        Cmod.onclick=function () {\r\n            document.getElementById(\"content\").style.display=\"none\";\r\n        }    \r\n    }\r\n    render(){\r\n        const month =[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n        \r\n        return(\r\n            <div> \r\n                {this.state.loading ||!this.state.Data ?(\r\n                    <div>Loading......</div>\r\n                ):(\r\n                    <div className= \" main-container-btn\">\r\n                        {this.state.Data.map((item ,i )=>\r\n                            <button id=\"content-btn\" onClick={()=>this.clickme(i)}>\r\n                                {item.date.datetime.day}<br/>\r\n                                {month[item.date.datetime.month-1]} \r\n                            </button>\r\n\r\n                        )}\r\n                        <div id=\"content\" >\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PassedHolidays;",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":28,"column":56,"nodeType":"37","messageId":"38","endLine":28,"endColumn":57},{"ruleId":"35","severity":1,"message":"36","line":25,"column":58,"nodeType":"37","messageId":"38","endLine":25,"endColumn":59},{"ruleId":"35","severity":1,"message":"36","line":25,"column":58,"nodeType":"37","messageId":"38","endLine":25,"endColumn":59},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]